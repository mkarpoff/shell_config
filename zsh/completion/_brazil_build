#compdef brazil-build bb

function _bb_cdk_list_templates {
	_arguments -C \
		": :($(ls -1 build/cdk.out/*.template.json | awk '{split($0,t,/\/|\./); print t[4]}'))" && ret=0
}

function _bb_cdk_deploy {
	_arguments -C \
		'-e' \
		'--hotswap' \
		": :($(ls -1 build/cdk.out/*.template.json | awk '{split($0,t,/\/|\./); print t[4]}'))" \
		&& ret=0
}

function _bb_cdk {
	local line
	_arguments -C \
		"1: :(list synthesize bootstrap deploy destroy diff metadata init context docs doctor)" \
		"*::arg:->args" && ret=0
		case "$line[1]" in
			destroy)
				_bb_cdk_list_templates
				;;
			deploy)
				_bb_cdk_deploy
				;;
		esac
}

function _bb_cdk_base {
	local line

	_arguments -C \
		"1: :(cdk deploy:assets deploy:bootstrap deploy:pipeline diff:pipeline bootstrap clean)" \
		"*::arg:->args" && ret=0
	
	case "$line[1]" in
		cdk)
			_bb_cdk
			;;
		deploy:assets)
			_bb_cdk_list_templates
			;;
		*)
			;;
	esac
}

	#TEMPLATES=$(ls -1 build/cdk.out/*.template.json | awk '{split($0,t,/\/|\./); print t[4]}')
	#if [ "$3" ==	"brazil-build" ]; then
	#	STACK_CMDS="cdk deploy:assets deploy:bootstrap deploy:pipeline diff:pipeline bootstrap clean"
	#	COMPREPLY=($(compgen -W "$STACK_CMDS" $1))
	#elif [ "$3" == "cdk" ]; then
	#	STACK_CMDS="list synthesize bootstrap deploy destroy diff metadata init context docs doctor"
	#	COMPREPLY=($(compgen -W "$STACK_CMDS" $2))
	#elif [ "$3" == "deploy" ]; then
	#	STACK_CMDS="$TEMPLATES "
	#	COMPREPLY=($(compgen -W "--hotswap -e $STACK_CMDS" -- $2))
	#else
	#	COMPREPLY=($(compgen -W "$TEMPLATES" $2))
	#fi

function _brazil_build {
	## If it's a CDK package then use CDK build
	if [[ "$PWD" == *"CDK" ]]; then
		_bb_cdk_base "$@"
	fi
	## If it's a gradle build package this relies on gradle-completion to be installed
	if [[ -f "build.gradle" || -f "build.gradle.kts" ]]; then
		_gradle "$@"
	fi
}


_brazil_build "$@"

